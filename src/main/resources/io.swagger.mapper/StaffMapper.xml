<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.swagger.mapper.StaffMapper">
    <resultMap id="BaseResultMap" type="io.swagger.domain.Staff">
        <id column="staff_id" jdbcType="INTEGER" property="staffId"/>
        <result column="first_name" jdbcType="VARCHAR" property="firstName"/>
        <result column="last_name" jdbcType="VARCHAR" property="lastName"/>
        <result column="address_id" jdbcType="SMALLINT" property="addressId"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="store_id" jdbcType="SMALLINT" property="storeId"/>
        <result column="active" jdbcType="BIT" property="active"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="last_update" jdbcType="TIMESTAMP" property="lastUpdate"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="io.swagger.domain.Staff">
        <result column="picture" jdbcType="BINARY" property="picture"/>
    </resultMap>
    <sql id="Base_Column_List">
    staff_id, first_name, last_name, address_id, email, store_id, active, username, password,
    last_update
  </sql>
    <sql id="Blob_Column_List">
    picture
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from staff
        where staff_id = #{staffId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from staff
    where staff_id = #{staffId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="io.swagger.domain.Staff">
        <selectKey keyProperty="staffId" order="AFTER" resultType="java.lang.Integer">
            PostgreSQL
        </selectKey>
        insert into staff (first_name, last_name, address_id,
        email, store_id, active,
        username, password, last_update,
        picture)
        values (#{firstName,jdbcType=VARCHAR}, #{lastName,jdbcType=VARCHAR}, #{addressId,jdbcType=SMALLINT},
        #{email,jdbcType=VARCHAR}, #{storeId,jdbcType=SMALLINT}, #{active,jdbcType=BIT},
        #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{lastUpdate,jdbcType=TIMESTAMP},
        #{picture,jdbcType=BINARY})
    </insert>
    <insert id="insertSelective" parameterType="io.swagger.domain.Staff">
        <selectKey keyProperty="staffId" order="AFTER" resultType="java.lang.Integer">
            PostgreSQL
        </selectKey>
        insert into staff
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="firstName != null">
                first_name,
            </if>
            <if test="lastName != null">
                last_name,
            </if>
            <if test="addressId != null">
                address_id,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="storeId != null">
                store_id,
            </if>
            <if test="active != null">
                active,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="lastUpdate != null">
                last_update,
            </if>
            <if test="picture != null">
                picture,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="firstName != null">
                #{firstName,jdbcType=VARCHAR},
            </if>
            <if test="lastName != null">
                #{lastName,jdbcType=VARCHAR},
            </if>
            <if test="addressId != null">
                #{addressId,jdbcType=SMALLINT},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="storeId != null">
                #{storeId,jdbcType=SMALLINT},
            </if>
            <if test="active != null">
                #{active,jdbcType=BIT},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="lastUpdate != null">
                #{lastUpdate,jdbcType=TIMESTAMP},
            </if>
            <if test="picture != null">
                #{picture,jdbcType=BINARY},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="io.swagger.domain.Staff">
        update staff
        <set>
            <if test="firstName != null">
                first_name = #{firstName,jdbcType=VARCHAR},
            </if>
            <if test="lastName != null">
                last_name = #{lastName,jdbcType=VARCHAR},
            </if>
            <if test="addressId != null">
                address_id = #{addressId,jdbcType=SMALLINT},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="storeId != null">
                store_id = #{storeId,jdbcType=SMALLINT},
            </if>
            <if test="active != null">
                active = #{active,jdbcType=BIT},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="lastUpdate != null">
                last_update = #{lastUpdate,jdbcType=TIMESTAMP},
            </if>
            <if test="picture != null">
                picture = #{picture,jdbcType=BINARY},
            </if>
        </set>
        where staff_id = #{staffId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="io.swagger.domain.Staff">
    update staff
    set first_name = #{firstName,jdbcType=VARCHAR},
      last_name = #{lastName,jdbcType=VARCHAR},
      address_id = #{addressId,jdbcType=SMALLINT},
      email = #{email,jdbcType=VARCHAR},
      store_id = #{storeId,jdbcType=SMALLINT},
      active = #{active,jdbcType=BIT},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      last_update = #{lastUpdate,jdbcType=TIMESTAMP},
      picture = #{picture,jdbcType=BINARY}
    where staff_id = #{staffId,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="io.swagger.domain.Staff">
    update staff
    set first_name = #{firstName,jdbcType=VARCHAR},
      last_name = #{lastName,jdbcType=VARCHAR},
      address_id = #{addressId,jdbcType=SMALLINT},
      email = #{email,jdbcType=VARCHAR},
      store_id = #{storeId,jdbcType=SMALLINT},
      active = #{active,jdbcType=BIT},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      last_update = #{lastUpdate,jdbcType=TIMESTAMP}
    where staff_id = #{staffId,jdbcType=INTEGER}
  </update>
</mapper>
