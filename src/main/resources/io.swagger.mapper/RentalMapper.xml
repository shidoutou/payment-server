<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.swagger.mapper.RentalMapper">
    <resultMap id="BaseResultMap" type="io.swagger.domain.Rental">
        <id column="rental_id" jdbcType="INTEGER" property="rentalId"/>
        <result column="rental_date" jdbcType="TIMESTAMP" property="rentalDate"/>
        <result column="inventory_id" jdbcType="INTEGER" property="inventoryId"/>
        <result column="customer_id" jdbcType="SMALLINT" property="customerId"/>
        <result column="return_date" jdbcType="TIMESTAMP" property="returnDate"/>
        <result column="staff_id" jdbcType="SMALLINT" property="staffId"/>
        <result column="last_update" jdbcType="TIMESTAMP" property="lastUpdate"/>
    </resultMap>
    <sql id="Base_Column_List">
    rental_id, rental_date, inventory_id, customer_id, return_date, staff_id, last_update
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from rental
        where rental_id = #{rentalId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from rental
    where rental_id = #{rentalId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="io.swagger.domain.Rental">
        <selectKey keyProperty="rentalId" order="AFTER" resultType="java.lang.Integer">
            PostgreSQL
        </selectKey>
        insert into rental (rental_date, inventory_id, customer_id,
        return_date, staff_id, last_update
        )
        values (#{rentalDate,jdbcType=TIMESTAMP}, #{inventoryId,jdbcType=INTEGER}, #{customerId,jdbcType=SMALLINT},
        #{returnDate,jdbcType=TIMESTAMP}, #{staffId,jdbcType=SMALLINT}, #{lastUpdate,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" parameterType="io.swagger.domain.Rental">
        <selectKey keyProperty="rentalId" order="AFTER" resultType="java.lang.Integer">
            PostgreSQL
        </selectKey>
        insert into rental
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="rentalDate != null">
                rental_date,
            </if>
            <if test="inventoryId != null">
                inventory_id,
            </if>
            <if test="customerId != null">
                customer_id,
            </if>
            <if test="returnDate != null">
                return_date,
            </if>
            <if test="staffId != null">
                staff_id,
            </if>
            <if test="lastUpdate != null">
                last_update,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="rentalDate != null">
                #{rentalDate,jdbcType=TIMESTAMP},
            </if>
            <if test="inventoryId != null">
                #{inventoryId,jdbcType=INTEGER},
            </if>
            <if test="customerId != null">
                #{customerId,jdbcType=SMALLINT},
            </if>
            <if test="returnDate != null">
                #{returnDate,jdbcType=TIMESTAMP},
            </if>
            <if test="staffId != null">
                #{staffId,jdbcType=SMALLINT},
            </if>
            <if test="lastUpdate != null">
                #{lastUpdate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="io.swagger.domain.Rental">
        update rental
        <set>
            <if test="rentalDate != null">
                rental_date = #{rentalDate,jdbcType=TIMESTAMP},
            </if>
            <if test="inventoryId != null">
                inventory_id = #{inventoryId,jdbcType=INTEGER},
            </if>
            <if test="customerId != null">
                customer_id = #{customerId,jdbcType=SMALLINT},
            </if>
            <if test="returnDate != null">
                return_date = #{returnDate,jdbcType=TIMESTAMP},
            </if>
            <if test="staffId != null">
                staff_id = #{staffId,jdbcType=SMALLINT},
            </if>
            <if test="lastUpdate != null">
                last_update = #{lastUpdate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where rental_id = #{rentalId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="io.swagger.domain.Rental">
    update rental
    set rental_date = #{rentalDate,jdbcType=TIMESTAMP},
      inventory_id = #{inventoryId,jdbcType=INTEGER},
      customer_id = #{customerId,jdbcType=SMALLINT},
      return_date = #{returnDate,jdbcType=TIMESTAMP},
      staff_id = #{staffId,jdbcType=SMALLINT},
      last_update = #{lastUpdate,jdbcType=TIMESTAMP}
    where rental_id = #{rentalId,jdbcType=INTEGER}
  </update>
</mapper>
